version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install Rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            echo "source $HOME/.cargo/env" >> $BASH_ENV
      - run:
          name: Check Formatting
          command: |
            rustfmt --version
            cargo fmt --all -- --check --color=auto
      - run:
          name: Install latest Lua 5.3 and LuaJIT from sources
          command: |
            # Lua 5.3
            curl -L https://www.lua.org/ftp/lua-5.3.5.tar.gz | tar xz
            cd lua-5.3.5
            make linux MYCFLAGS=-fPIC
            sudo install -m 0644 -D -t /usr/local/include/lua5.3 src/lua.h src/luaconf.h src/lualib.h src/lauxlib.h
            sudo install -m 0644 src/liblua.a /usr/local/lib/liblua5.3.a
            cd ..
            rm -rf lua-5.3.5
            # LuaJIT
            curl -L http://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz | tar xz
            cd LuaJIT-2.1.0-beta3
            make
            sudo make install
            cd ..
            rm -rf LuaJIT-2.1.0-beta3
      - run:
          name: Install Lua 5.2/5.1 from packages
          command: |
            sudo apt-get update
            sudo apt-get -y --no-install-recommends install liblua5.2-dev liblua5.1-0-dev
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build --all --all-targets
      - run:
          name: Run all tests / Lua 5.3
          command: LUA_INC=/usr/local/include/lua5.3 LUA_LIB=/usr/local/lib LUA_LIB_NAME=lua5.3 cargo test --all --no-default-features --features lua53
      - run:
          name: Run all tests / Lua 5.2
          command: cargo test --all --no-default-features --features lua52
      - run:
          name: Run all tests / Lua 5.1
          command: cargo test --all --no-default-features --features lua51
      - run:
          name: Run all tests / LuaJIT
          command: cargo test --all --no-default-features --features luajit
      - run:
          name: Check coverage
          command: |
            export KCOV_VERSION=37
            export LOCAL="~/.local"
            sudo apt-get -y --no-install-recommends install cmake binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
            curl -L https://github.com/SimonKagstrom/kcov/archive/v${KCOV_VERSION}.tar.gz | tar xz
            mkdir kcov-${KCOV_VERSION}/build
            cd kcov-${KCOV_VERSION}/build
            cmake -DCMAKE_INSTALL_PREFIX:PATH=$LOCAL .. && make && make install && cd ../..
            cargo clean
            RUSTFLAGS="-C link-dead-code" cargo test --no-run
            for file in target/debug/*; do
              if [[ -f $file && -x $file && ! $file =~ compile_fail ]]; then
                mkdir -p "target/cov/$(basename $file)";
                kcov --exclude-pattern=~/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file";
              fi
            done
            kcov --coveralls-id=$COVERALLS_REPO_TOKEN --merge target/cov target/cov/*
      - save_cache:
          paths:
            - /home/circleci/.cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
