[package]
name = "rlua"
version = "0.11.0"
authors = ["kyren <catherine@chucklefish.org>"]
description = "High level bindings to Lua 5.3"
repository = "https://github.com/chucklefish/rlua"
documentation = "https://docs.rs/rlua"
readme = "README.md"
keywords = ["lua"]
license = "MIT"

[badges]
travis-ci = { repository = "chucklefish/rlua", branch = "master" }

[features]
default = ["builtin-lua"]
# Builds the correct version of Lua 5.3 inside the crate. If you want to link a
# specialized version of lua into your binary, you can disable this feature to
# do that, but care must be taken.  `rlua` makes at least the following
# assumptions about the linked lua library:
#   * LUA_INTEGER is long long
#   * LUA_NUMBER as double
#   * LUA_EXTRASPACE is sizeof(void*)
builtin-lua = ["gcc"]
# Don't define LUA_USE_APICHECK if we are in release mode.  When
# debug_assertions are enabled, LUA_USE_APICHECK is enabled regardless.  There
# are still a few known ways to trigger LUA_USE_APICHECK checks with rlua, but
# when these bugs are fixed, this option will go away and this behavior will be
# the default.
disable-lua-apicheck = []

[dependencies]
libc = { version = "0.2" }
failure = { version = "0.1.1" }

[build-dependencies]
gcc = { version = "0.3.52", optional = true }

[dev-dependencies]
rustyline = "1.0.0"
